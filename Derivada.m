function [y] = Derivada(x, type)
% Função cria shape Front-End com 'N' pontos
% x são os pontos do shape selecionado
% type define se o shape é gaussiano ou front-end signal

% x = x+1;

if(type==1) % Front-End    
%A derivada analítica do sinal da Front-end é gerada a partir di sinal s
    
    a1 =      0.5838  ;%0.5302, 0.6374)
    b1 =       36.63  ;%36.51, 36.74)
    c1 =       3.132  ;%2.998, 3.267)
    a2 =      0.4727  ;%0.4207, 0.5247)
    b2 =       34.43  ;%34.35, 34.52)
    c2 =       1.794  ;%1.697, 1.89)
    a3 =   -0.006821  ;%-0.00768, -0.005962)
    b3 =       27.74  ;%27.58, 27.9)
    c3 =       1.538  ;%1.322, 1.753)
    a4 =    0.003819  ;%-0.003701, 0.01134)
    b4 =       47.25  ;%43.42, 51.08)
    c4 =       4.022  ;%1.976, 6.069)
    a5 =      0.3283  ;%0.3117, 0.3449)
    b5 =       40.58  ;%40.21, 40.94)
    c5 =       5.381  ;%5.12, 5.641)
    a6 =      0.2898  ;%0.249, 0.3305)
    b6 =       32.85  ;%32.82, 32.89)
    c6 =       1.234  ;%1.196, 1.273)

    y = (a1*(2*b1 - 2*x))./(c1.^2*exp((b1 - x).^2./c1.^2)) + (a2*(2*b2 - 2*x))./(c2.^2*exp((b2 - x).^2./c2.^2)) + (a3*(2*b3 - 2*x))./(c3.^2*exp((b3 - x).^2./c3.^2)) + (a4*(2*b4 - 2*x))./(c4.^2*exp((b4 - x).^2./c4.^2)) + (a5*(2*b5 - 2*x))./(c5.^2*exp((b5 - x).^2./c5.^2)) + (a6*(2*b6 - 2*x))./(c6.^2*exp((b6 - x).^2./c6.^2));
  
    
else    
    a1 =           1;
    b1 =          41;
    c1 =       5.303;
    y = (a1*(2*b1 - 2*x))./(c1.^2*exp((b1 - x).^2./c1.^2));    
end












